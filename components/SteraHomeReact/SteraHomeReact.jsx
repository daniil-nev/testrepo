/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import { animated, useSpring, easings } from 'react-spring';
import useSteraHomeReact from 'components/SteraHomeReact/useSteraHomeReact';

const Resolution1920 = animated(
  styled('div', {
    shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
  })(({ data }) => ({
    backgroundColor: `rgba(255, 255, 255, 1)`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    height:
      data.currentVariant === 'Resolution375'
        ? `4426px`
        : data.currentVariant === 'Resolution768'
        ? `3484px`
        : data.currentVariant === 'Resolution900'
        ? `3463px`
        : data.currentVariant === 'Resolution1200'
        ? `5065px`
        : `5215px`,
    width: '100%',
    justifyContent: `flex-start`,
    alignItems: `flex-end`,
    padding: `0px`,
    boxSizing: `border-box`,
  }))
);

const WebMobileNav = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  display: `flex`,
  position: `sticky`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `5px 20px`
      : data.currentVariant === 'Resolution768'
      ? `5px 30px`
      : data.currentVariant === 'Resolution900'
      ? `5px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `5px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `5px 135px`
      : `5px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  top: `0`,
  zIndex: `3000`,
}));

const Header = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width: `21px`,
});

const MenuItems = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Logo = animated(
  styled('img')({
    height: `48px`,
    width: `17.35px`,
    margin: `0px`,
  })
);

const Home = animated(
  styled('div')({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(60, 64, 67, 1)`,
    fontStyle: `normal`,
    fontFamily: `SF Pro Display`,
    fontWeight: `400`,
    fontSize: `18px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    textTransform: `none`,
    margin: `0px 0px 0px 50px`,
  })
);

const Company = animated(
  styled('div')({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(60, 64, 67, 1)`,
    fontStyle: `normal`,
    fontFamily: `SF Pro Display`,
    fontWeight: `400`,
    fontSize: `18px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    textTransform: `none`,
    margin: `0px 0px 0px 50px`,
  })
);

const Partners = animated(
  styled('div')({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(60, 64, 67, 1)`,
    fontStyle: `normal`,
    fontFamily: `SF Pro Display`,
    fontWeight: `400`,
    fontSize: `18px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    textTransform: `none`,
    margin: `0px 0px 0px 50px`,
  })
);

const RightSide = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `220px`,
});

const Button1 = animated(
  styled('div')({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `center`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    width: `160px`,
    margin: `0px`,
  })
);

const Button2 = styled('div')({
  backgroundColor: `rgba(70, 71, 198, 1)`,
  borderRadius: `5px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `160px`,
  height: `60px`,
  margin: `0px`,
  overflow: `hidden`,
});

const StateLayer = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const LabelText = styled('div')(({ theme }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
}));

const ExternalLink = styled('a')({
  textDecoration: `none`,
  width: `100%`,
});

const MenuButton = styled('img')({
  height: `auto`,
  width: `60px`,
  margin: `0px`,
});

const Header1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `60px 20px 0px 20px`
      : data.currentVariant === 'Resolution768'
      ? `60px 30px 0px 30px`
      : data.currentVariant === 'Resolution900'
      ? `60px 100px 0px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `60px 50px 0px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `60px 135px 0px 135px`
      : `60px 375px 0px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `1`,
  margin: `0px`,
  height:
    data.currentVariant === 'Resolution375'
      ? `665px`
      : data.currentVariant === 'Resolution768'
      ? `912px`
      : data.currentVariant === 'Resolution900'
      ? `912px`
      : 'unset',
}));

const Title = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TransformationalUiUx = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `36px`
      : data.currentVariant === 'Resolution768'
      ? `40px`
      : data.currentVariant === 'Resolution900'
      ? `40px`
      : `56px`,
  letterSpacing: data.currentVariant === 'Resolution375' ? `-0.18px` : `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Resolution375'
      ? `130.00000715255737%`
      : `120.00000476837158%`,
  textTransform: `none`,
  flexGrow: `1`,
  margin: `0px`,
}));

const LearnMore = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `24px`,
  margin: `42px 0px 0px 0px`,
});

const LearnMore1 = animated(
  styled('div', {
    shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
  })(({ data }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(60, 64, 67, 1)`,
    fontStyle: `normal`,
    fontFamily: `SF Pro Display`,
    fontWeight: `400`,
    fontSize:
      data.currentVariant === 'Resolution375'
        ? `20px`
        : data.currentVariant === 'Resolution768'
        ? `20px`
        : data.currentVariant === 'Resolution900'
        ? `20px`
        : data.currentVariant === 'Resolution1200'
        ? `20px`
        : data.currentVariant === 'Resolution1440'
        ? `20px`
        : `18px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    textTransform: `none`,
    margin: `0px`,
  }))
);

const ArrowIosDown = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: `auto`,
  width:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `20px`
      : data.currentVariant === 'Resolution900'
      ? `20px`
      : `24px`,
  margin: `0px 0px 0px 10px`,
}));

const Reel = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(5, 5, 5, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  flexGrow:
    data.currentVariant === 'Resolution1200'
      ? 'unset'
      : data.currentVariant === 'Resolution1440'
      ? 'unset'
      : `1`,
  margin: `42px 0px 0px 0px`,
  height:
    data.currentVariant === 'Resolution1200'
      ? `660px`
      : data.currentVariant === 'Resolution1440'
      ? `810px`
      : 'unset',
}));

const ReelIFrame = styled('iframe')({
  width: `100%`,
  height: `100%`,
  position: `absolute`,
  zIndex: `-1000`,
  border: `0px`,
});

const FullServiceDesignSup = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Resolution375' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'Resolution375'
      ? `flex-start`
      : data.currentVariant === 'Resolution1200'
      ? `flex-start`
      : data.currentVariant === 'Resolution1440'
      ? `flex-start`
      : `space-between`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `70px 20px`
      : data.currentVariant === 'Resolution768'
      ? `70px 30px`
      : data.currentVariant === 'Resolution900'
      ? `70px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `135px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `135px`
      : `135px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const LeftSide = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Resolution375'
      ? `column`
      : data.currentVariant === 'Resolution768'
      ? `column`
      : data.currentVariant === 'Resolution900'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `218px`
      : data.currentVariant === 'Resolution900'
      ? `218px`
      : `560px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  margin:
    data.currentVariant === 'Resolution375'
      ? `0px`
      : data.currentVariant === 'Resolution1200'
      ? `0px`
      : data.currentVariant === 'Resolution1440'
      ? `0px`
      : 'unset',
  height:
    data.currentVariant === 'Resolution768'
      ? `93px`
      : data.currentVariant === 'Resolution900'
      ? `93px`
      : 'unset',
}));

const FullServiceDesignSup1Span1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
  flexGrow: 'unset',
}));

const FullServiceDesignSup1Span2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(70, 71, 198, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
  flexGrow: 'unset',
}));

const FullServiceDesignSup1Span3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
  flexGrow: 'unset',
}));

const FullServiceDesignSup1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  flexGrow:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `1`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  width:
    data.currentVariant === 'Resolution768'
      ? `300px`
      : data.currentVariant === 'Resolution900'
      ? `300px`
      : 'unset',
}));

const RightSide1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Resolution375'
      ? `flex-start`
      : data.currentVariant === 'Resolution768'
      ? `flex-start`
      : data.currentVariant === 'Resolution900'
      ? `flex-start`
      : `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `300px`
      : data.currentVariant === 'Resolution900'
      ? `300px`
      : data.currentVariant === 'Resolution1200'
      ? 'unset'
      : data.currentVariant === 'Resolution1440'
      ? 'unset'
      : `610px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution1200'
      ? `0px`
      : data.currentVariant === 'Resolution1440'
      ? `0px`
      : 'unset',
  flexGrow:
    data.currentVariant === 'Resolution1200'
      ? `1`
      : data.currentVariant === 'Resolution1440'
      ? `1`
      : 'unset',
}));

const IndependentDesignAge = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `14px`
      : data.currentVariant === 'Resolution900'
      ? `14px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `295px`
      : data.currentVariant === 'Resolution900'
      ? `295px`
      : `458px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const SteraGlobal = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(70, 71, 198, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `12px`
      : data.currentVariant === 'Resolution768'
      ? `12px`
      : data.currentVariant === 'Resolution900'
      ? `12px`
      : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  width: data.currentVariant === 'Resolution375' ? 'unset' : `458px`,
  margin: data.currentVariant === 'Resolution375' ? `0px` : `55px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  flexGrow: data.currentVariant === 'Resolution375' ? `1` : 'unset',
}));

const MultidisciplinaryTea = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(245, 246, 247, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Resolution375' ? `column` : `row`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `70px 20px`
      : data.currentVariant === 'Resolution768'
      ? `70px 50px`
      : data.currentVariant === 'Resolution900'
      ? `70px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `140px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `140px 135px`
      : `140px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  height: data.currentVariant === 'Resolution375' ? `686px` : 'unset',
}));

const LeftSide1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent:
    data.currentVariant === 'Resolution375' ? `space-between` : `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `300px`
      : data.currentVariant === 'Resolution900'
      ? `300px`
      : `485.5px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  height: data.currentVariant === 'Resolution375' ? `413px` : 'unset',
}));

const Text = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: data.currentVariant === 'Resolution375' ? 'unset' : `0px`,
}));

const MultidisciplinaryTea1Span1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  flexGrow: 'unset',
  margin: 'unset',
}));

const MultidisciplinaryTea1Span2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 162, 1, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  flexGrow: 'unset',
  margin: 'unset',
}));

const MultidisciplinaryTea1Span3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  flexGrow: 'unset',
  margin: 'unset',
}));

const MultidisciplinaryTea1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `24px`
      : data.currentVariant === 'Resolution900'
      ? `24px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  flexGrow: `1`,
  margin: `0px`,
}));

const Image1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/SteraHomeReact_Image.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  height:
    data.currentVariant === 'Resolution375'
      ? `300px`
      : data.currentVariant === 'Resolution768'
      ? `226px`
      : data.currentVariant === 'Resolution900'
      ? `226px`
      : `450px`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `300px`
      : data.currentVariant === 'Resolution900'
      ? `300px`
      : `560px`,
  margin:
    data.currentVariant === 'Resolution375' ? 'unset' : `95px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const RightSide2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `300px`
      : data.currentVariant === 'Resolution900'
      ? `300px`
      : `485.5px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const Image2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/SteraHomeReact_Image_1.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  height:
    data.currentVariant === 'Resolution375'
      ? `234px`
      : data.currentVariant === 'Resolution768'
      ? `234px`
      : data.currentVariant === 'Resolution900'
      ? `234px`
      : `326px`,
  width:
    data.currentVariant === 'Resolution375'
      ? `300px`
      : data.currentVariant === 'Resolution768'
      ? `300px`
      : data.currentVariant === 'Resolution900'
      ? `300px`
      : `458px`,
  margin: data.currentVariant === 'Resolution375' ? `15px 0px 0px 0px` : `0px`,
}));

const Text1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `0px`
      : data.currentVariant === 'Resolution768'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `40px 0px 0px 0px`
      : `41px 0px 0px 0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `458px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `0px`
      : data.currentVariant === 'Resolution768'
      ? `15px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `15px 0px 0px 0px`
      : `64px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Resolution375'
      ? `stretch`
      : data.currentVariant === 'Resolution768'
      ? `stretch`
      : data.currentVariant === 'Resolution900'
      ? `stretch`
      : 'unset',
}));

const BeingFullRemoteFromT = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  flexGrow: `1`,
  margin: `0px`,
}));

const Subtext = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `458px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `15px 0px 0px 0px`
      : data.currentVariant === 'Resolution768'
      ? `15px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `15px 0px 0px 0px`
      : `64px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Resolution375'
      ? `stretch`
      : data.currentVariant === 'Resolution768'
      ? `stretch`
      : data.currentVariant === 'Resolution900'
      ? `stretch`
      : 'unset',
}));

const Approach = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(70, 71, 198, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `12px`
      : data.currentVariant === 'Resolution768'
      ? `12px`
      : data.currentVariant === 'Resolution900'
      ? `12px`
      : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  flexGrow: `1`,
  margin: `0px`,
}));

const TitleSection = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `70px 20px`
      : data.currentVariant === 'Resolution768'
      ? `70px 30px`
      : data.currentVariant === 'Resolution900'
      ? `70px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `115px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `115px 135px`
      : `115px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Text2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const SmallEnoughToCareBigSpan1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const SmallEnoughToCareBigSpan2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(70, 71, 198, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const SmallEnoughToCareBigSpan3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const SmallEnoughToCareBig = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const SellingPoints = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Resolution375' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `0px 20px 70px 20px`
      : data.currentVariant === 'Resolution768'
      ? `0px 30px 115px 30px`
      : data.currentVariant === 'Resolution900'
      ? `0px 100px 115px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `0px 50px 115px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `0px 135px 115px 135px`
      : `0px 375px 115px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Left = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: data.currentVariant === 'Resolution375' ? 'unset' : `1`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const Q1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const DesignedForGrowth = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `22px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const MakeSureYourProductW = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(17, 17, 17, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `14px`
      : data.currentVariant === 'Resolution900'
      ? `14px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  opacity: `0.6000000238418579`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const Q2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `100px`
      : data.currentVariant === 'Resolution900'
      ? `100px`
      : `133px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution768'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `30px 0px 0px 0px`
      : `85px 0px 0px 0px`,
}));

const ClearComms = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `22px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TalkToArtDirectorsWh = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(17, 17, 17, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `14px`
      : data.currentVariant === 'Resolution900'
      ? `14px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  opacity: `0.6000000238418579`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const Q3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution768'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `30px 0px 0px 0px`
      : `85px 0px 0px 0px`,
}));

const CompleteManagement = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `22px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const GetAccurateAndTransp = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(17, 17, 17, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `14px`
      : data.currentVariant === 'Resolution900'
      ? `14px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  opacity: `0.6000000238418579`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const Center = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: data.currentVariant === 'Resolution375' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: data.currentVariant === 'Resolution375' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : `0px 0px 0px 55px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const Q11 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const OnDemandExpertise = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `22px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const HaveAccessToExceptio = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(17, 17, 17, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `14px`
      : data.currentVariant === 'Resolution900'
      ? `14px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  opacity: `0.6000000238418579`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const Q21 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: data.currentVariant === 'Resolution375' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution768'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `30px 0px 0px 0px`
      : `85px 0px 0px 0px`,
}));

const Collaboration = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `22px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const StayOnTopOfYourBusin = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(17, 17, 17, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `14px`
      : data.currentVariant === 'Resolution900'
      ? `14px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  opacity: `0.6000000238418579`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const Right = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent:
    data.currentVariant === 'Resolution375' ? `space-between` : `flex-start`,
  alignItems:
    data.currentVariant === 'Resolution375' ? `flex-start` : `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: data.currentVariant === 'Resolution375' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : `0px 0px 0px 55px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  height: data.currentVariant === 'Resolution375' ? `139px` : 'unset',
}));

const Q12 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: data.currentVariant === 'Resolution375' ? 'unset' : `0px`,
}));

const CompleteManagement1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `22px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const GetAccurateAndTransp1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(17, 17, 17, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `14px`
      : data.currentVariant === 'Resolution900'
      ? `14px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  opacity: `0.6000000238418579`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const FullServiceDesignSup2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(245, 246, 247, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Resolution375' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'Resolution768'
      ? `space-between`
      : data.currentVariant === 'Resolution900'
      ? `space-between`
      : `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `40px 20px`
      : data.currentVariant === 'Resolution768'
      ? `70px 50px`
      : data.currentVariant === 'Resolution900'
      ? `70px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `135px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `135px`
      : `135px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Left1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `1`,
  margin:
    data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  width:
    data.currentVariant === 'Resolution768'
      ? `354px`
      : data.currentVariant === 'Resolution900'
      ? `354px`
      : 'unset',
}));

const Expertise = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(70, 71, 198, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize: `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  margin: data.currentVariant === 'Resolution375' ? `40px 0px 0px 0px` : `0px`,
}));

const ClientsAreFriendsEacSpan1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const ClientsAreFriendsEacSpan2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 162, 1, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const ClientsAreFriendsEacSpan3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const ClientsAreFriendsEac = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `32px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `44px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `354px`
      : data.currentVariant === 'Resolution900'
      ? `354px`
      : `560px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `0px`
      : data.currentVariant === 'Resolution768'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `30px 0px 0px 0px`
      : `58px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const FocusOnWhatSReallyIm = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(60, 64, 67, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `20px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `235px`
      : data.currentVariant === 'Resolution900'
      ? `235px`
      : `458px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution768'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `30px 0px 0px 0px`
      : `58px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const MenuItems1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `54px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution768'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `30px 0px 0px 0px`
      : `58px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const Button3 = animated(
  styled('div', {
    shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
  })(({ data }) => ({
    backgroundColor: `rgba(70, 71, 198, 1)`,
    borderRadius: `5px`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `center`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    alignSelf: `stretch`,
    width: data.currentVariant === 'Resolution375' ? 'unset' : `160px`,
    margin: `0px`,
    overflow: `hidden`,
    flexGrow: data.currentVariant === 'Resolution375' ? `1` : 'unset',
  }))
);

const StateLayer1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `10px 24px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const LabelText1 = styled('div')(({ theme }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  flexGrow: `1`,
  margin: `0px`,
}));

const ExternalLink1 = styled('a')({
  textDecoration: `none`,
  width: `100%`,
});

const Right1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/SteraHomeReact_Right.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `300px`
      : data.currentVariant === 'Resolution900'
      ? `300px`
      : `458px`,
  height:
    data.currentVariant === 'Resolution375'
      ? `400px`
      : data.currentVariant === 'Resolution768'
      ? `400px`
      : data.currentVariant === 'Resolution900'
      ? `400px`
      : `600px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `0px 0px 0px 153px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const ServicesSection = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(17, 17, 17, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Resolution375' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'Resolution900' ? `space-between` : `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Resolution375'
      ? `70px 20px`
      : data.currentVariant === 'Resolution768'
      ? `70px 50px`
      : data.currentVariant === 'Resolution900'
      ? `70px 100px`
      : data.currentVariant === 'Resolution1200'
      ? `135px 50px`
      : data.currentVariant === 'Resolution1440'
      ? `135px`
      : `135px 375px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `818px`,
  margin: `0px`,
}));

const Left2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `1`,
  margin: data.currentVariant === 'Resolution900' ? 'unset' : `0px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
  width:
    data.currentVariant === 'Resolution768'
      ? `200px`
      : data.currentVariant === 'Resolution900'
      ? `200px`
      : 'unset',
}));

const WeOfferFullyManagedP = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `16px`
      : data.currentVariant === 'Resolution768'
      ? `16px`
      : data.currentVariant === 'Resolution900'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  opacity: `0.6000000238418579`,
  alignSelf:
    data.currentVariant === 'Resolution768'
      ? 'unset'
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `stretch`,
  margin: `0px`,
  width:
    data.currentVariant === 'Resolution768'
      ? `200px`
      : data.currentVariant === 'Resolution900'
      ? `200px`
      : 'unset',
}));

const Services = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(70, 71, 198, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `400`,
  fontSize: `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `150%`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `0px`
      : data.currentVariant === 'Resolution768'
      ? `314px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `314px 0px 0px 0px`
      : `452px 0px 0px 0px`,
}));

const Right2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Resolution900' ? `flex-end` : `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Resolution375'
      ? 'unset'
      : data.currentVariant === 'Resolution768'
      ? `361px`
      : data.currentVariant === 'Resolution900'
      ? `361px`
      : `458px`,
  margin:
    data.currentVariant === 'Resolution375'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? 'unset'
      : `0px 0px 0px 153px`,
  alignSelf: data.currentVariant === 'Resolution375' ? `stretch` : 'unset',
}));

const WebsiteDesign = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `28px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `41px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const MobileWebAppDesign = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `28px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `41px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Resolution768'
      ? `28px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `28px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const UserFlowDesign = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `28px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `41px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Resolution768'
      ? `28px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `28px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const Prototyping = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `28px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `41px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Resolution768'
      ? `28px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `28px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const LogoBranding = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `28px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `41px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Resolution768'
      ? `28px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `28px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const WebAppDevelopment = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `SF Pro Display`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Resolution375'
      ? `28px`
      : data.currentVariant === 'Resolution768'
      ? `28px`
      : data.currentVariant === 'Resolution900'
      ? `28px`
      : `41px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `129.99999523162842%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Resolution768'
      ? `28px 0px 0px 0px`
      : data.currentVariant === 'Resolution900'
      ? `28px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

function SteraHomeReact(props) {
  const { data } = useSteraHomeReact();

  const [Resolution1920Spring, Resolution1920Api] = useSpring(() => ({
    config: {
      duration: 500,
      easing: easings['easeInCubic'],
    },
    delay: 0,
    from: { opacity: 0 },
  }));

  const [LogoSpring, LogoApi] = useSpring(() => ({
    config: {
      duration: 0,
      easing: easings['easeInOutExpo'],
    },
    delay: 0,
    from: { opacity: 1 },
  }));

  const [HomeSpring, HomeApi] = useSpring(() => ({
    config: {
      duration: 0,
      easing: easings['easeInOutExpo'],
    },
    delay: 0,
    from: { opacity: 1 },
  }));

  const [CompanySpring, CompanyApi] = useSpring(() => ({
    config: {
      duration: 0,
      easing: easings['easeInOutExpo'],
    },
    delay: 0,
    from: { opacity: 1 },
  }));

  const [PartnersSpring, PartnersApi] = useSpring(() => ({
    config: {
      duration: 0,
      easing: easings['easeInOutExpo'],
    },
    delay: 0,
    from: { opacity: 1 },
  }));

  const [Button1Spring, Button1Api] = useSpring(() => ({
    config: {
      duration: 0,
      easing: easings['easeInCubic'],
    },
    delay: 0,
    from: { opacity: 1 },
  }));

  const [LearnMore1Spring, LearnMore1Api] = useSpring(() => ({
    config: {
      duration: 0,
      easing: easings['easeInOutExpo'],
    },
    delay: 0,
    from: { opacity: 1 },
  }));

  const [Button3Spring, Button3Api] = useSpring(() => ({
    config: {
      duration: 0,
      easing: easings['easeInOutExpo'],
    },
    delay: 0,
    from: { opacity: 1 },
  }));

  React.useEffect(() => {
    Resolution1920Api.start({
      ...{ opacity: 1 },
      delay: 0,
      config: { duration: 500 },
    });
  }, []);

  return (
    <Resolution1920
      className={props.className}
      data={data}
      style={{ ...Resolution1920Spring }}
    >
      <WebMobileNav data={data}>
        <Header>
          <MenuItems>
            <Logo
              onMouseEnter={() => {
                LogoApi.start({ ...{ opacity: 0.7 }, delay: 0 });
              }}
              onMouseLeave={() => {
                LogoApi.start({ opacity: 1 });
              }}
              style={{ ...LogoSpring }}
              src={`assets/images/SteraHomeReact_Logo.png`}
              loading="lazy"
              alt={'Logo'}
            />
            {!(data.currentVariant === 'Resolution375') &&
              !(data.currentVariant === 'Resolution768') &&
              !(data.currentVariant === 'Resolution900') && (
                <Home
                  onMouseEnter={() => {
                    HomeApi.start({ ...{ opacity: 0.7 }, delay: 0 });
                  }}
                  onMouseLeave={() => {
                    HomeApi.start({ opacity: 1 });
                  }}
                  style={{ ...HomeSpring }}
                >
                  {`Home`}
                </Home>
              )}
            {!(data.currentVariant === 'Resolution375') &&
              !(data.currentVariant === 'Resolution768') &&
              !(data.currentVariant === 'Resolution900') && (
                <Company
                  onMouseEnter={() => {
                    CompanyApi.start({ ...{ opacity: 0.7 }, delay: 0 });
                  }}
                  onMouseLeave={() => {
                    CompanyApi.start({ opacity: 1 });
                  }}
                  style={{ ...CompanySpring }}
                >
                  {`Company`}
                </Company>
              )}
            {!(data.currentVariant === 'Resolution375') &&
              !(data.currentVariant === 'Resolution768') &&
              !(data.currentVariant === 'Resolution900') && (
                <Partners
                  onMouseEnter={() => {
                    PartnersApi.start({ ...{ opacity: 0.7 }, delay: 0 });
                  }}
                  onMouseLeave={() => {
                    PartnersApi.start({ opacity: 1 });
                  }}
                  style={{ ...PartnersSpring }}
                >
                  {`Partners`}
                </Partners>
              )}
          </MenuItems>
        </Header>
        <RightSide>
          <ExternalLink
            href="https://calendly.com/stera/discovery-meeting-clone"
            target="_blank"
            rel="noopener noreferrer"
          >
            <Button1
              onMouseLeave={() => {
                Button1Api.start({ opacity: 1 });
              }}
              onMouseEnter={() => {
                Button1Api.start({ ...{ opacity: 0.7 }, delay: 0 });
              }}
              style={{ ...Button1Spring }}
            >
              <Button2>
                <StateLayer>
                  <LabelText>{`Let’s Chat`}</LabelText>
                </StateLayer>
              </Button2>
            </Button1>
          </ExternalLink>
          {(data.currentVariant === 'Resolution375' ||
            data.currentVariant === 'Resolution768' ||
            data.currentVariant === 'Resolution900') && (
            <MenuButton
              src={`assets/images/SteraHomeReact_Menu_Button.svg`}
              loading="lazy"
              alt={'Menu Button'}
            />
          )}
        </RightSide>
      </WebMobileNav>
      <Header1 data={data}>
        <Title>
          <TransformationalUiUx data={data}>
            {`Transformational UI/UX design and builds to supercharge your business, product and marketing growth. `}
          </TransformationalUiUx>
        </Title>
        <LearnMore>
          <LearnMore1
            data={data}
            onMouseEnter={() => {
              LearnMore1Api.start({ ...{ opacity: 0.7 }, delay: 0 });
            }}
            onMouseLeave={() => {
              LearnMore1Api.start({ opacity: 1 });
            }}
            style={{ ...LearnMore1Spring }}
          >
            {`Learn more`}
          </LearnMore1>
          <ArrowIosDown
            data={data}
            src={`assets/images/SteraHomeReact_arrow_ios_down.svg`}
            loading="lazy"
            alt={'arrow-ios-down'}
          />
        </LearnMore>
        <Reel data={data}>
          <ReelIFrame
            src={`https://player.vimeo.com/video/796364929?h=22fcc8dea&autoplay=1&controls=0&muted=1&playsinline=1&loop=0`}
            allow="autoplay; fullscreen; picture-in-picture"
          ></ReelIFrame>
        </Reel>
      </Header1>
      <FullServiceDesignSup data={data}>
        <LeftSide data={data}>
          <FullServiceDesignSup1 data={data}>
            <FullServiceDesignSup1Span1
              data={data}
            >{`Full-service `}</FullServiceDesignSup1Span1>
            <FullServiceDesignSup1Span2
              data={data}
            >{`design support `}</FullServiceDesignSup1Span2>
            <FullServiceDesignSup1Span3
              data={data}
            >{`that growing B2B and marketing agencies need.`}</FullServiceDesignSup1Span3>
          </FullServiceDesignSup1>
        </LeftSide>
        <RightSide1 data={data}>
          <IndependentDesignAge data={data}>
            {`Independent design agency with a unique perspective. We provide all of the services that UI/UX designers, UX consultants and branding agencies deliver under one roof – without silos or handoffs.`}
          </IndependentDesignAge>
          {!(data.currentVariant === 'Resolution375') && (
            <SteraGlobal data={data}>{`Stera Global `}</SteraGlobal>
          )}
        </RightSide1>
      </FullServiceDesignSup>
      <MultidisciplinaryTea data={data}>
        <LeftSide1 data={data}>
          <Text data={data}>
            <MultidisciplinaryTea1 data={data}>
              <MultidisciplinaryTea1Span1 data={data}>{`Multidisciplinary team. 
`}</MultidisciplinaryTea1Span1>
              <MultidisciplinaryTea1Span2
                data={data}
              >{`Global `}</MultidisciplinaryTea1Span2>
              <MultidisciplinaryTea1Span3
                data={data}
              >{`strategy.`}</MultidisciplinaryTea1Span3>
            </MultidisciplinaryTea1>
          </Text>
          <Image1 data={data}></Image1>
        </LeftSide1>
        <RightSide2 data={data}>
          {!(data.currentVariant === 'Resolution375') && (
            <Image2 data={data}></Image2>
          )}
          <Text1 data={data}>
            <BeingFullRemoteFromT data={data}>
              {`Being full-remote from the day one allowed us to focus on hiring the best talent worldwide. And we’re happy to share.`}
            </BeingFullRemoteFromT>
          </Text1>
          {!(data.currentVariant === 'Resolution375') && (
            <Subtext data={data}>
              <Approach data={data}>{`Approach`}</Approach>
            </Subtext>
          )}
        </RightSide2>
      </MultidisciplinaryTea>
      <TitleSection data={data}>
        <Text2>
          <SmallEnoughToCareBig data={data}>
            <SmallEnoughToCareBigSpan1 data={data}>{`Small enough to care. 
Big enough to deliver `}</SmallEnoughToCareBigSpan1>
            <SmallEnoughToCareBigSpan2
              data={data}
            >{`success`}</SmallEnoughToCareBigSpan2>
            <SmallEnoughToCareBigSpan3
              data={data}
            >{`.`}</SmallEnoughToCareBigSpan3>
          </SmallEnoughToCareBig>
        </Text2>
      </TitleSection>
      <SellingPoints data={data}>
        <Left data={data}>
          <Q1>
            <DesignedForGrowth data={data}>
              {`Designed for growth`}
            </DesignedForGrowth>
            <MakeSureYourProductW data={data}>
              {`Make sure your product works great tomorrow while making something amazing today.`}
            </MakeSureYourProductW>
          </Q1>
          <Q2 data={data}>
            <ClearComms data={data}>{`Clear comms`}</ClearComms>
            <TalkToArtDirectorsWh data={data}>
              {`Talk to art directors whenever you need or join regular project meetings to maintain momentum.`}
            </TalkToArtDirectorsWh>
          </Q2>
          {false && (
            <Q3 data={data}>
              <CompleteManagement data={data}>
                {`Complete management`}
              </CompleteManagement>
              <GetAccurateAndTransp data={data}>
                {`Get accurate and transparent project plans or roadmaps while you concentrate on a bigger picture.`}
              </GetAccurateAndTransp>
            </Q3>
          )}
        </Left>
        <Center data={data}>
          <Q11>
            <OnDemandExpertise data={data}>
              {`On demand expertise`}
            </OnDemandExpertise>
            <HaveAccessToExceptio data={data}>
              {`Have access to exceptional design talent as and when you need it.`}
            </HaveAccessToExceptio>
          </Q11>
          <Q21 data={data}>
            <Collaboration data={data}>{`Collaboration`}</Collaboration>
            <StayOnTopOfYourBusin data={data}>
              {`Stay on top of your business goals and collaborate with someone who truly understands your needs. Initially and as your business grows.`}
            </StayOnTopOfYourBusin>
          </Q21>
        </Center>
        <Right data={data}>
          <Q12 data={data}>
            <CompleteManagement1 data={data}>
              {`Complete management`}
            </CompleteManagement1>
            <GetAccurateAndTransp1 data={data}>
              {`Get accurate and transparent project plans or roadmaps while you concentrate on a bigger picture.`}
            </GetAccurateAndTransp1>
          </Q12>
        </Right>
      </SellingPoints>
      <FullServiceDesignSup2 data={data}>
        <Left1 data={data}>
          {!(data.currentVariant === 'Resolution375') && (
            <Expertise data={data}>{`Expertise`}</Expertise>
          )}
          <ClientsAreFriendsEac data={data}>
            <ClientsAreFriendsEacSpan1
              data={data}
            >{`Clients are `}</ClientsAreFriendsEacSpan1>
            <ClientsAreFriendsEacSpan2
              data={data}
            >{`friends`}</ClientsAreFriendsEacSpan2>
            <ClientsAreFriendsEacSpan3 data={data}>{`. 
Each of your problem is ours.`}</ClientsAreFriendsEacSpan3>
          </ClientsAreFriendsEac>
          <FocusOnWhatSReallyIm data={data}>
            {`Focus on what’s really important for your business while we figure out what’s best for your customers.`}
          </FocusOnWhatSReallyIm>
          <MenuItems1 data={data}>
            <ExternalLink1
              href="https://calendly.com/stera/discovery-meeting-clone"
              target="_blank"
              rel="noopener noreferrer"
            >
              <Button3
                onMouseLeave={() => {
                  Button3Api.start({ opacity: 1 });
                }}
                onMouseEnter={() => {
                  Button3Api.start({ ...{ opacity: 0.7 }, delay: 0 });
                }}
                data={data}
                style={{ ...Button3Spring }}
              >
                <StateLayer1>
                  <LabelText1>{`Let’s Chat`}</LabelText1>
                </StateLayer1>
              </Button3>
            </ExternalLink1>
          </MenuItems1>
        </Left1>
        <Right1 data={data}></Right1>
      </FullServiceDesignSup2>
      <ServicesSection data={data}>
        <Left2 data={data}>
          <WeOfferFullyManagedP data={data}>
            {`We offer fully managed projects based around:`}
          </WeOfferFullyManagedP>
          {!(data.currentVariant === 'Resolution375') && (
            <Services data={data}>{`Services`}</Services>
          )}
        </Left2>
        <Right2 data={data}>
          <WebsiteDesign data={data}>{`Website Design`}</WebsiteDesign>
          <MobileWebAppDesign data={data}>
            {`Mobile/Web App Design`}
          </MobileWebAppDesign>
          <UserFlowDesign data={data}>{`User Flow Design`}</UserFlowDesign>
          <Prototyping data={data}>{`Prototyping`}</Prototyping>
          <LogoBranding data={data}>{`Logo & Branding`}</LogoBranding>
          <WebAppDevelopment data={data}>
            {`Web & App Development`}
          </WebAppDevelopment>
        </Right2>
      </ServicesSection>
    </Resolution1920>
  );
}

export default SteraHomeReact;
