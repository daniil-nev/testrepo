/**********************************************************************
 *
 *   Responsiveness hook generated by Quest
 *
 *   Responsive Logic for the component goes in this hook
 *   If you want to customize the min/max values for the breakpoints, open the component on Quest Editor.
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';

const useSteraHomeReactResponsiveSize = () => {
  const [variant, setVariant] = React.useState('Resolution1920');

  React.useEffect(() => {
    const handlerResolution375 = (e) =>
      setVariant((size) => (e.matches ? 'Resolution375' : size));

    const Resolution375Size = window.matchMedia('(max-width: 616px)');
    setVariant((size) => (Resolution375Size.matches ? 'Resolution375' : size));
    Resolution375Size.addEventListener('change', handlerResolution375);

    const handlerResolution768 = (e) =>
      setVariant((size) => (e.matches ? 'Resolution768' : size));

    const Resolution768Size = window.matchMedia(
      '(min-width: 617px) and (max-width: 889px)'
    );
    setVariant((size) => (Resolution768Size.matches ? 'Resolution768' : size));
    Resolution768Size.addEventListener('change', handlerResolution768);

    const handlerResolution900 = (e) =>
      setVariant((size) => (e.matches ? 'Resolution900' : size));

    const Resolution900Size = window.matchMedia(
      '(min-width: 890px) and (max-width: 1100px)'
    );
    setVariant((size) => (Resolution900Size.matches ? 'Resolution900' : size));
    Resolution900Size.addEventListener('change', handlerResolution900);

    const handlerResolution1200 = (e) =>
      setVariant((size) => (e.matches ? 'Resolution1200' : size));

    const Resolution1200Size = window.matchMedia(
      '(min-width: 1101px) and (max-width: 1320px)'
    );
    setVariant((size) =>
      Resolution1200Size.matches ? 'Resolution1200' : size
    );
    Resolution1200Size.addEventListener('change', handlerResolution1200);

    const handlerResolution1440 = (e) =>
      setVariant((size) => (e.matches ? 'Resolution1440' : size));

    const Resolution1440Size = window.matchMedia(
      '(min-width: 1321px) and (max-width: 1680px)'
    );
    setVariant((size) =>
      Resolution1440Size.matches ? 'Resolution1440' : size
    );
    Resolution1440Size.addEventListener('change', handlerResolution1440);

    const handlerResolution1920 = (e) =>
      setVariant((size) => (e.matches ? 'Resolution1920' : size));

    const Resolution1920Size = window.matchMedia('(min-width: 1681px)');
    setVariant((size) =>
      Resolution1920Size.matches ? 'Resolution1920' : size
    );
    Resolution1920Size.addEventListener('change', handlerResolution1920);
  }, []);

  return variant;
};

export default useSteraHomeReactResponsiveSize;
